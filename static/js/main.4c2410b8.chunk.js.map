{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pages","numberOfPages","Math","ceil","i","push","className","classNames","disabled","href","onClick","map","page","active","items","from","to","numbers","n","getNumbers","App","useState","setPerPage","setCurrentPage","lastItem","firstItem","currentItems","slice","length","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAA8B,SAAC,GAS1C,IAJK,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAQ,GACRC,EAAgBC,KAAKC,KAAKP,EAAQC,GAE/BO,EAAI,EAAGA,GAAKH,EAAeG,GAAK,EACvCJ,EAAMK,KAAKD,GAeb,OACE,mCACE,qBAAIE,UAAU,aAAd,UACE,oBAAIA,UACFC,IACE,YACA,CACEC,SAA0B,IAAhBV,IAJhB,SASE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EACfY,QA7Ba,WACD,IAAhBZ,GACFC,EAAaD,EAAc,IAsBvB,oBAUDE,EAAMW,KAAI,SAAAC,GAAI,OACb,oBAEEN,UACEC,IACE,YACA,CACEM,OAAQD,IAASd,IANzB,SAWE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KAhBEA,MAoBT,oBACEN,UACEC,IACE,YACA,CACEC,SAAUV,IAAgBG,IALlC,SAUE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBG,EAC/BS,QAjEa,WACjBZ,IAAgBG,GAClBF,EAAaD,EAAc,IA0DvB,0BClFV,IAAMgB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQZ,KAAKa,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBR,KAAI,SAAAO,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAAgBC,mBAAS,IAAlBzB,EAAP,oBACA,EAA8ByB,mBAAS,GAAvC,mBAAOxB,EAAP,KAAgByB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOvB,EAAP,KAAoByB,EAApB,KAEIC,EAAW1B,EAAcD,EACzB4B,EAAYD,EAAW3B,EAEvBC,EAAcD,EAAUD,IAC1B4B,EAAW5B,EACX6B,GAAa3B,EAAc,GAAKD,GAGlC,IAAM6B,EAAeZ,EAAMa,MAAMF,EAAWD,GAW5C,OACE,sBAAKlB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiC2B,EAAY,EAD7C,cACoDD,EADpD,eACmEV,EAAMc,OADzE,OAIA,sBAAKtB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRuB,GAAG,kBACHvB,UAAU,eACVwB,MAAOjC,EACPkC,SApBO,SAACC,GAChBV,GAAYU,EAAMC,OAAOH,OACzBP,EAAe,IAaT,UAOE,wBAAQO,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB5B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aA1Ce,SAACa,GACpBW,EAAeX,MA4Cb,6BACGc,EAAaf,KAAI,SAAAwB,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YEtEjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4c2410b8.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pages = [];\n  const numberOfPages = Math.ceil(total / perPage);\n\n  for (let i = 1; i <= numberOfPages; i += 1) {\n    pages.push(i);\n  }\n\n  const handlePrevPage = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextPage = () => {\n    if (currentPage !== numberOfPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={\n          classNames(\n            'page-item',\n            {\n              disabled: currentPage === 1,\n            },\n          )\n        }\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={handlePrevPage}\n          >\n            «\n          </a>\n        </li>\n        {pages.map(page => (\n          <li\n            key={page}\n            className={\n              classNames(\n                'page-item',\n                {\n                  active: page === currentPage,\n                },\n              )\n            }\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => onPageChange(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li\n          className={\n            classNames(\n              'page-item',\n              {\n                disabled: currentPage === numberOfPages,\n              },\n            )\n          }\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === numberOfPages}\n            onClick={handleNextPage}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [total] = useState(42);\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  let lastItem = currentPage * perPage;\n  let firstItem = lastItem - perPage;\n\n  if (currentPage * perPage > total) {\n    lastItem = total;\n    firstItem = (currentPage - 1) * perPage;\n  }\n\n  const currentItems = items.slice(firstItem, lastItem);\n\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const onSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem + 1} - ${lastItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={onSelect}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n\n      <ul>\n        {currentItems.map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}